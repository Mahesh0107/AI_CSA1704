import itertools

def calculate_distance(city1, city2):
    x1, y1 = city1
    x2, y2 = city2
    return ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5

def total_distance(tour, cities):
    distance = 0
    for i in range(len(tour)):
        distance += calculate_distance(cities[tour[i]], cities[tour[(i + 1) % len(tour)]])
    return distance

def traveling_salesman(cities):
    num_cities = len(cities)
    if num_cities < 2:
        return cities

    shortest_tour = None
    min_distance = float('inf')
    city_indices = list(range(num_cities))

    for tour in itertools.permutations(city_indices):
        distance = total_distance(tour, cities)
        if distance < min_distance:
            min_distance = distance
            shortest_tour = tour

    return shortest_tour

def main():
    cities = []
    num_cities = int(input("Enter the number of cities: "))

    for i in range(num_cities):
        city_name = input(f"Enter the name of city {i + 1}: ")
        x, y = map(float, input(f"Enter coordinates for {city_name} (x y): ").split())
        cities.append((x, y))

    shortest_tour = traveling_salesman(cities)
    
    print("Shortest tour:")
    for index in shortest_tour:
        print(f"{cities[index]}")

if __name__ == "__main__":
    main()
