
graph = {}

def add_edge(graph, u, v):
    if u in graph:
        graph[u].append(v)
    else:
        graph[u] = [v]

def dfs(graph, node, visited):
    visited.add(node)
    print(node, end=' ')

    if node in graph:
        for neighbor in graph[node]:
            if neighbor not in visited:
                dfs(graph, neighbor, visited)

if __name__ == "__main__":
    num_edges = int(input("Enter the number of edges: "))

    for _ in range(num_edges):
        u, v = input("Enter edge (u v): ").split()
        add_edge(graph, u, v)

    start_node = input("Enter the starting node: ")

    visited = set()
    print("Depth-First Search starting from node", start_node)
    dfs(graph, start_node, visited)
